@* // MedChain_UI/Shared/NavMenu.razor *@
@using MedChain_Models.Enums
@using System.Security.Claims
@inject AuthenticationStateProvider AuthenticationStateProvider

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">MedChain</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </div>

        @if (isAuthenticated)
        {
            @if (userRole == UserRoles.Admin)
            {
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="admin">
                        <span class="oi oi-dashboard" aria-hidden="true"></span> Admin Dashboard
                    </NavLink>
                </div>
            }

            @if (userRole == UserRoles.Doctor)
            {
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="doctor">
                        <span class="oi oi-people" aria-hidden="true"></span> Doctor Dashboard
                    </NavLink>
                </div>
            }

            @if (userRole == UserRoles.Patient)
            {
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="patient">
                        <span class="oi oi-person" aria-hidden="true"></span> Patient Dashboard
                    </NavLink>
                </div>
            }

            <div class="nav-item px-3">
                <NavLink class="nav-link" href="logout">
                    <span class="oi oi-account-logout" aria-hidden="true"></span> Logout
                </NavLink>
            </div>
        }
        else
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="login">
                    <span class="oi oi-account-login" aria-hidden="true"></span> Login
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="register">
                    <span class="oi oi-plus" aria-hidden="true"></span> Register
                </NavLink>
            </div>
        }
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;
    private bool isAuthenticated = false;
    private UserRoles? userRole = null;

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        isAuthenticated = authState.User.Identity.IsAuthenticated;

        if (isAuthenticated)
        {
            var roleClaim = authState.User.FindFirst(ClaimTypes.Role);
            if (roleClaim != null && Enum.TryParse(roleClaim.Value, out UserRoles role))
            {
                userRole = role;
            }
        }
    }
}